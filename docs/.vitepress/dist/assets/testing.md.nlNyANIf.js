import{_ as a,c as o,o as t,ae as r}from"./chunks/framework.BitmDC1G.js";const _=JSON.parse('{"title":"Тестування працездатності системи","description":"","frontmatter":{},"headers":[],"relativePath":"testing.md","filePath":"testing.md"}'),i={name:"testing.md"};function n(s,e,d,l,h,c){return t(),o("div",null,e[0]||(e[0]=[r('<h1 id="тестування-працездатності-системи" tabindex="-1">Тестування працездатності системи <a class="header-anchor" href="#тестування-працездатності-системи" aria-label="Permalink to &quot;Тестування працездатності системи&quot;">​</a></h1><p>Тестування системи проводилося з використанням інструменту Postman, який дозволяє перевіряти API-запити та їх відповіді. Нижче наведено результати тестування основних функцій системи.</p><h2 id="перегляд-користувачів" tabindex="-1">Перегляд користувачів <a class="header-anchor" href="#перегляд-користувачів" aria-label="Permalink to &quot;Перегляд користувачів&quot;">​</a></h2><h3 id="успішнии-перегляд-користувачів" tabindex="-1">Успішний перегляд користувачів <a class="header-anchor" href="#успішнии-перегляд-користувачів" aria-label="Permalink to &quot;Успішний перегляд користувачів&quot;">​</a></h3><p>Для тестування успішного отримання даних всіх користувачів було надіслано GET-запит на endpoint <code>/fetch_users</code>. У відповідь було отримано список всіх користувачів, зареєстрованих у системі.</p><p>![Успішний перегляд користувачів](./test img/fetch_users_screenshot.png)</p><h2 id="реєстрація-користувача" tabindex="-1">Реєстрація користувача <a class="header-anchor" href="#реєстрація-користувача" aria-label="Permalink to &quot;Реєстрація користувача&quot;">​</a></h2><h3 id="успішна-реєстрація" tabindex="-1">Успішна реєстрація <a class="header-anchor" href="#успішна-реєстрація" aria-label="Permalink to &quot;Успішна реєстрація&quot;">​</a></h3><p>Для тестування успішної реєстрації користувача було надіслано POST-запит на endpoint <code>/registration</code> з усіма необхідними параметрами: <code>login</code>, <code>first_name</code>, <code>last_name</code>, <code>password</code>, <code>email</code>, та <code>role_id</code>. У відповідь було отримано повідомлення про успішну реєстрацію.</p><p>![Успішна реєстрація користувача](./test img/successful_registration_screenshot.png)</p><h3 id="неуспішна-реєстрація" tabindex="-1">Неуспішна реєстрація <a class="header-anchor" href="#неуспішна-реєстрація" aria-label="Permalink to &quot;Неуспішна реєстрація&quot;">​</a></h3><p>При спробі реєстрації користувача без обов&#39;язкових параметрів, сервер повернув помилку з повідомленням про відсутність необхідних даних. Це підтверджує правильність обробки помилок на стороні сервера.</p><p>![Неуспішна реєстрація користувача](./test img/failed_registration_screenshot.png)</p><h2 id="авторизація-користувача" tabindex="-1">Авторизація користувача <a class="header-anchor" href="#авторизація-користувача" aria-label="Permalink to &quot;Авторизація користувача&quot;">​</a></h2><h3 id="успішна-авторизація" tabindex="-1">Успішна авторизація <a class="header-anchor" href="#успішна-авторизація" aria-label="Permalink to &quot;Успішна авторизація&quot;">​</a></h3><p>Для тестування успішної авторизації було надіслано POST-запит на endpoint <code>/login</code> з параметрами <code>email</code> та <code>password</code>. Сервер успішно авторизував користувача та повернув повідомлення про успішний вхід.</p><p>![Успішна авторизація користувача](./test img/successful_login_screenshot.png)</p><h3 id="неуспішна-авторизація-через-невірнии-email" tabindex="-1">Неуспішна авторизація через невірний email <a class="header-anchor" href="#неуспішна-авторизація-через-невірнии-email" aria-label="Permalink to &quot;Неуспішна авторизація через невірний email&quot;">​</a></h3><p>При спробі авторизації з електронною поштою, яка не зареєстрована в системі, сервер повертає повідомлення &quot;User not found!&quot;. Це підтверджує правильність перевірки наявності користувача в базі даних.</p><p>![Неуспішна авторизація через невірний email](./test img/failed_login_wrong_email_screenshot.png)</p><h3 id="неуспішна-авторизація-через-невірнии-пароль" tabindex="-1">Неуспішна авторизація через невірний пароль <a class="header-anchor" href="#неуспішна-авторизація-через-невірнии-пароль" aria-label="Permalink to &quot;Неуспішна авторизація через невірний пароль&quot;">​</a></h3><p>При спробі авторизації з невірним паролем, сервер повернув помилку з повідомленням про невірний пароль. Це підтверджує правильність перевірки даних користувача.</p><p>![Неуспішна авторизація через невірний пароль](./test img/failed_login_wrong_password_screenshot.png)</p><h2 id="зміна-ролі-користувача" tabindex="-1">Зміна ролі користувача <a class="header-anchor" href="#зміна-ролі-користувача" aria-label="Permalink to &quot;Зміна ролі користувача&quot;">​</a></h2><h3 id="успішна-зміна-ролі" tabindex="-1">Успішна зміна ролі <a class="header-anchor" href="#успішна-зміна-ролі" aria-label="Permalink to &quot;Успішна зміна ролі&quot;">​</a></h3><p>Для тестування успішної зміни ролі користувача було надіслано POST-запит на endpoint <code>/change_permissions</code> з параметрами <code>email</code>, <code>email_admin</code>, <code>password_admin</code>, та <code>role_id</code>. Сервер успішно змінив роль користувача та повернув повідомлення про успішну зміну.</p><p>![Успішна зміна ролі користувача](./test img/successful_role_change_screenshot.png)</p><h3 id="неуспішна-зміна-ролі-через-відсутність-прав" tabindex="-1">Неуспішна зміна ролі через відсутність прав <a class="header-anchor" href="#неуспішна-зміна-ролі-через-відсутність-прав" aria-label="Permalink to &quot;Неуспішна зміна ролі через відсутність прав&quot;">​</a></h3><p>При спробі зміни ролі користувача без необхідних прав адміністратора, сервер повернув помилку з повідомленням про відсутність прав. Це підтверджує правильність перевірки прав доступу.</p><p>![Неуспішна зміна ролі через відсутність прав](./test img/failed_role_change_no_permission_screenshot.png)</p><h3 id="неуспішна-зміна-ролі-через-наявність-цієі-ролі-у-користувача" tabindex="-1">Неуспішна зміна ролі через наявність цієї ролі у користувача <a class="header-anchor" href="#неуспішна-зміна-ролі-через-наявність-цієі-ролі-у-користувача" aria-label="Permalink to &quot;Неуспішна зміна ролі через наявність цієї ролі у користувача&quot;">​</a></h3><p>При спробі змінити роль користувача на ту, яку він вже має, сервер повертає повідомлення &quot;User already has this role!&quot;. Це означає, що користувач вже має призначену роль, і зміна не потрібна.</p><p>![Неуспішна зміна ролі через наявність цієї ролі у користувача](./test img/user_already_has_role_screenshot.png)</p><h3 id="неуспішна-зміна-ролі-через-невірні-дані-адміністратора" tabindex="-1">Неуспішна зміна ролі через невірні дані адміністратора <a class="header-anchor" href="#неуспішна-зміна-ролі-через-невірні-дані-адміністратора" aria-label="Permalink to &quot;Неуспішна зміна ролі через невірні дані адміністратора&quot;">​</a></h3><p>При спробі зміни ролі з невірними даними адміністратора, сервер повернув помилку з повідомленням про невірні дані. Це підтверджує правильність перевірки даних адміністратора.</p><p>![Неуспішна зміна ролі через невірні дані адміністратора](./test img/failed_role_change_wrong_admin_credentials_screenshot.png)</p><h3 id="неуспішна-зміна-ролі-через-невірнии-email-користувача" tabindex="-1">Неуспішна зміна ролі через невірний email користувача <a class="header-anchor" href="#неуспішна-зміна-ролі-через-невірнии-email-користувача" aria-label="Permalink to &quot;Неуспішна зміна ролі через невірний email користувача&quot;">​</a></h3><p>При спробі змінити роль користувача з електронною поштою, яка не зареєстрована в системі, сервер повертає повідомлення &quot;User not found!&quot;. Це підтверджує правильність перевірки наявності користувача в базі даних перед спробою змінити його роль.</p><p>![Неуспішна зміна ролі через невірний email користувача](./test img/failed_role_change_wrong_user_email_screenshot.png)</p><h2 id="видалення-користувача" tabindex="-1">Видалення користувача <a class="header-anchor" href="#видалення-користувача" aria-label="Permalink to &quot;Видалення користувача&quot;">​</a></h2><h3 id="успішне-видалення-користувача" tabindex="-1">Успішне видалення користувача <a class="header-anchor" href="#успішне-видалення-користувача" aria-label="Permalink to &quot;Успішне видалення користувача&quot;">​</a></h3><p>Для тестування успішного видалення користувача було надіслано POST-запит на endpoint <code>/delete_user</code> з параметром <code>email</code>. Сервер успішно видалив користувача та повернув повідомлення про успішне видалення.</p><p>![Успішне видалення користувача](./test img/successful_delete_user_screenshot.png)</p><h3 id="неуспішне-видалення-користувача-через-відсутність-в-базі-даних" tabindex="-1">Неуспішне видалення користувача через відсутність в базі даних <a class="header-anchor" href="#неуспішне-видалення-користувача-через-відсутність-в-базі-даних" aria-label="Permalink to &quot;Неуспішне видалення користувача через відсутність в базі даних&quot;">​</a></h3><p>При спробі видалення користувача, якого не існує в базі даних, сервер повертає повідомлення про помилку з повідомленням &quot;User not found!&quot;. Це підтверджує правильність обробки помилок на стороні сервера, коли користувача не існує в системі.</p><p>![Неуспішне видалення користувача через відсутність в базі даних](./test img/failed_delete_user_not_found_screenshot.png)</p>',46)]))}const u=a(i,[["render",n]]);export{_ as __pageData,u as default};
